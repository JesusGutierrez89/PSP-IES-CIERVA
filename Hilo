import java.time.LocalTime;

public class Hilo extends Thread {
    private int id;
    private int Hora;
    private int minuto;
    private String linea;

    public Hilo(int id, int hora, int minuto, String linea) {
        this.id = id;
        this.Hora = hora;
        this.minuto = minuto;
        this.linea = linea;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public int getHora() {
        return Hora;
    }

    public void setHora(int Hora) {
        this.Hora = Hora;
    }

    public int getMinuto() {
        return minuto;
    }

    public void setMinuto(int minuto) {
        this.minuto = minuto;
    }

    public String getLinea() {
        return linea;
    }

    public void setLinea(String linea) {
        this.linea = linea;
    }

    private int calcularEspInicio() {

        LocalTime ahora = LocalTime.now();
        int horaActual = ahora.getHour();
        int minutoActual = ahora.getMinute();

        int tiempoActual = horaActual * 60 + minutoActual;

        int tiempoEsp = (tiempoActual / 60 + 1) * 60 - tiempoActual;

        return tiempoEsp * 1000;
    }
    private void ejecutarComando() {
        //Meter la logica de la practica 1
    }

    @Override
    public void run() {
        int tiempoIniEsp = calcularEspInicio();
        try {
            Thread.sleep(tiempoIniEsp);
            while (true) {
                ejecutarComando();
                Thread.sleep(24 * 60 * 60 * 1000); // 1 d√≠a de espera
            }
        } catch (InterruptedException e) {
            System.out.println("Hilo " + id + " interrumpido");
        }
    }
}
